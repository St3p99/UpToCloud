version: "3.8"
services:
  keycloak:
    container_name: keycloak
    hostname: keycloak
    command:
      - " -b 0.0.0.0"
    image: jboss/keycloak:${KEYCLOAK_VERSION}
    restart: on-failure
    env_file: ./.env
    volumes: 
      - ./imports/keycloak/realm-export.json:/keycloak/realm-export.json
      - ./imports/certs/tls.crt:/etc/x509/https/tls.crt   # map certificates to container
      - ./imports/certs/tls.key:/etc/x509/https/tls.key   # map certificates to container
    #   - ./imports/keycloak/init.sh:/init.sh
    # entrypoint: sh -c "/init.sh"
    environment:
      KEYCLOAK_USER: $KEYCLOAK_USER
      KEYCLOAK_PASSWORD: $KEYCLOAK_PASSWORD
      KEYCLOAK_DATABASE_USER: $KEYCLOAK_DATABASE_USER
      KEYCLOAK_DATABASE_PASSWORD: $KEYCLOAK_DATABASE_PASSWORD
      KEYCLOAK_DATABASE_NAME: $KEYCLOAK_DATABASE_NAME
      KEYCLOAK_IMPORT: /keycloak/realm-export.json
    ports:
      - $KEYCLOAK_LOCAL_PORT:$KEYCLOAK_DOCKER_PORT
      - $KEYCLOAK_LOCAL_PORT_HTTPS:$KEYCLOAK_DOCKER_PORT_HTTPS
    depends_on:
      - postgresdb
    networks:
    - uptocloudnw

  postgresdb:
    container_name: db
    hostname: db
    image: postgres
    restart: on-failure
    env_file: ./.env
    environment:
      POSTGRES_DB: $DB_DATABASE
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_ROOT_PASSWORD
    ports:
      - $DB_LOCAL_PORT:$DB_DOCKER_PORT
    volumes:
    - ./imports/db/uptoclouddb.sql:/docker-entrypoint-initdb.d/uptoclouddb.sql
    networks:
    - uptocloudnw
  
  # backend:
  #   container_name: springbootapp
  #   hostname: springbootapp
  #   depends_on:
  #     - postgresdb
  #     - keycloak
  #   build: ./springbootapp
  #   restart: on-failure
  #   env_file: ./.env
  #   ports:
  #     - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
    # volumes:
      # - ./imports/certs/uptocloud.p12:/uptocloud.p12
    #   - ./imports/init.sh:/init.sh
    # entrypoint: sh -c "/init.sh"
    # stdin_open: true
    # tty: true
    # networks:
    # - uptocloudnw
  
networks:
  uptocloudnw: 
    driver: "bridge"
    
  